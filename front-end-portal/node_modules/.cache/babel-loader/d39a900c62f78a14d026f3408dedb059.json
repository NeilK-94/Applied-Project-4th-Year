{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\neilk\\\\eclipse-workspace\\\\Applied-Project-4th-Year\\\\front-end-portal\\\\src\\\\component\\\\LoginComponent.jsx\";\nimport React, { Component } from 'react';\nimport AuthenticationService from '../service/AuthenticationService';\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: 'Neil',\n      password: '',\n      hasLoginFailed: false,\n      SuccessfulLogin: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, this.state.hasLoginFailed && React.createElement(\"div\", {\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Failed Login\"), \"User Name: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), \"Password: \", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.loginClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Login\")), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"React-Modal Examples\"), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Open\",\n      onClick: () => this.openModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      visible: this.state.visible,\n      width: \"400\",\n      height: \"300\",\n      effect: \"fadeInUp\",\n      onClickAway: () => this.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Some Contents\"), React.createElement(\"a\", {\n      href: \"javascript:void(0);\",\n      onClick: () => this.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Close\")))));\n  } //  This is a generic change handler rather than having to have a method for each element!\n\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    // if(this.state.username === \"Neil\" && this.state.password === \"password\"){\n    //     //  Send username and password to authentication service\n    //     AuthenticationService.registerLogin(this.state.username, this.state.password)\n    //     this.setState(\n    //         {\n    //             SuccessfulLogin: true,\n    //             hasLoginFailed: false,\n    //         }\n    //     )\n    //     this.props.history.push(`/home/${this.state.username}`)\n    // } else{\n    //     this.setState(\n    //         {\n    //             hasLoginFailed: true,\n    //             SuccessfulLogin: false\n    //         }\n    //     )\n    // }\n    // AuthenticationService.executeBasicAuthenticationService(this.state.username, this.state.password)\n    // .then(\n    //     () => {\n    //         AuthenticationService.registerLogin(this.state.username, this.state.password)\n    //         this.setState({ SuccessfulLogin: true, hasLoginFailed: false})  //  dont need!!!!!!!!!!!!!!!!!!\n    //         this.props.history.push(`/home/${this.state.username}`)\n    //     }\n    // ).catch( ()=> {\n    //     this.setState({hasLoginFailed: true})\n    //     this.setState({SuccessfulLogin: false})\n    // })\n    AuthenticationService.executeJwtAuthenticationService(this.state.username, this.state.password).then(response => {\n      AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token);\n      this.props.history.push(\"/home/\".concat(this.state.username));\n    }).catch(() => {\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    });\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["C:/Users/neilk/eclipse-workspace/Applied-Project-4th-Year/front-end-portal/src/component/LoginComponent.jsx"],"names":["React","Component","AuthenticationService","LoginComponent","constructor","props","state","username","password","hasLoginFailed","SuccessfulLogin","handleChange","bind","loginClicked","render","openModal","visible","closeModal","event","setState","target","name","value","executeJwtAuthenticationService","then","response","registerSuccessfulLoginForJwt","data","token","history","push","catch","showSuccessMessage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport AuthenticationService from '../service/AuthenticationService';\r\n\r\nclass LoginComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            username: 'Neil',\r\n            password: '',\r\n            hasLoginFailed: false,\r\n            SuccessfulLogin: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.loginClicked = this.loginClicked.bind(this);\r\n\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1>Login</h1>\r\n                <div className=\"container\">\r\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Failed Login</div>}\r\n                    User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange}></input>\r\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange}></input>\r\n                    <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\r\n                </div>\r\n                <section>\r\n                <h1>React-Modal Examples</h1>\r\n                <input type=\"button\" value=\"Open\" onClick={() => this.openModal()} />\r\n                <Modal \r\n                    visible={this.state.visible}\r\n                    width=\"400\"\r\n                    height=\"300\"\r\n                    effect=\"fadeInUp\"\r\n                    onClickAway={() => this.closeModal()}\r\n                >\r\n                    <div>\r\n                        <h1>Title</h1>\r\n                        <p>Some Contents</p>\r\n                        <a href=\"javascript:void(0);\" onClick={() => this.closeModal()}>Close</a>\r\n                    </div>\r\n                </Modal>\r\n            </section>\r\n            </div>\r\n        )\r\n    }\r\n    //  This is a generic change handler rather than having to have a method for each element!\r\n    handleChange(event){\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        );\r\n    }\r\n\r\n    loginClicked(){\r\n        // if(this.state.username === \"Neil\" && this.state.password === \"password\"){\r\n        //     //  Send username and password to authentication service\r\n        //     AuthenticationService.registerLogin(this.state.username, this.state.password)\r\n        //     this.setState(\r\n        //         {\r\n        //             SuccessfulLogin: true,\r\n        //             hasLoginFailed: false,\r\n        //         }\r\n        //     )\r\n        //     this.props.history.push(`/home/${this.state.username}`)\r\n        // } else{\r\n        //     this.setState(\r\n        //         {\r\n        //             hasLoginFailed: true,\r\n        //             SuccessfulLogin: false\r\n        //         }\r\n        //     )\r\n        // }\r\n        // AuthenticationService.executeBasicAuthenticationService(this.state.username, this.state.password)\r\n        // .then(\r\n        //     () => {\r\n        //         AuthenticationService.registerLogin(this.state.username, this.state.password)\r\n        //         this.setState({ SuccessfulLogin: true, hasLoginFailed: false})  //  dont need!!!!!!!!!!!!!!!!!!\r\n        //         this.props.history.push(`/home/${this.state.username}`)\r\n        //     }\r\n        // ).catch( ()=> {\r\n        //     this.setState({hasLoginFailed: true})\r\n        //     this.setState({SuccessfulLogin: false})\r\n        // })\r\n\r\n        AuthenticationService\r\n            .executeJwtAuthenticationService(this.state.username, this.state.password)\r\n            .then((response) => {\r\n                AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\r\n                this.props.history.push(`/home/${this.state.username}`)\r\n            }).catch(() => {\r\n                this.setState({ showSuccessMessage: false })\r\n                this.setState({ hasLoginFailed: true })\r\n            })\r\n    }\r\n}\r\n\r\nexport default LoginComponent"]},"metadata":{},"sourceType":"module"}