{"ast":null,"code":"//   data service method to call the REST API using AXIOS framework\nimport axios from 'axios';\nconst API_URL = 'http://localhost:8080';\nconst GET_ALL_JOBS_URL = \"\".concat(API_URL, \"/jobs/\");\nconst CREATE_JOB_URL = \"\".concat(API_URL, \"/jobs/\");\n\nclass JobDataService {\n  //  Call the /jobs endpoint to retrieve all jobs. There are axios promises.    \n  retrieveAllJobs() {\n    let userName = \"Neil\";\n    return axios.get(\"\".concat(GET_ALL_JOBS_URL), {\n      //  Send header for authentication\n      headers: {\n        authorization: YOUR_HEADER_VAL\n      }\n    });\n  }\n\n  retrieveJob(employer, id) {\n    return axios.get(\"\".concat(GET_ALL_JOBS_URL).concat(id));\n  }\n\n  deleteJob(userName, id) {\n    //  Name of user and id to delete\n    return axios.delete(\"\".concat(GET_ALL_JOBS_URL).concat(id));\n  }\n\n  updateJob(jobTitle, employer, id, job) {\n    return axios.put(\"\".concat(GET_ALL_JOBS_URL).concat(id), job);\n  }\n\n  createJob(jobTitle, employer, id, job) {\n    return axios.post(\"\".concat(CREATE_JOB_URL), job); //  put user id here as url path\n  }\n\n}\n\nexport default new JobDataService(); //  create an instance of JobDataService and make it available for other components.","map":{"version":3,"sources":["C:/Users/neilk/eclipse-workspace/Applied-Project-4th-Year/front-end-portal/src/service/JobDataService.js"],"names":["axios","API_URL","GET_ALL_JOBS_URL","CREATE_JOB_URL","JobDataService","retrieveAllJobs","userName","get","headers","authorization","YOUR_HEADER_VAL","retrieveJob","employer","id","deleteJob","delete","updateJob","jobTitle","job","put","createJob","post"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,uBAAhB;AACA,MAAMC,gBAAgB,aAAMD,OAAN,WAAtB;AACA,MAAME,cAAc,aAAMF,OAAN,WAApB;;AAEA,MAAMG,cAAN,CAAqB;AACjB;AACAC,EAAAA,eAAe,GAAG;AACd,QAAIC,QAAQ,GAAG,MAAf;AACA,WAAON,KAAK,CAACO,GAAN,WAAaL,gBAAb,GACH;AAAI;AACAM,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAEC;AADV;AADb,KADG,CAAP;AAQH;;AACDC,EAAAA,WAAW,CAACC,QAAD,EAAWC,EAAX,EAAe;AACtB,WAAOb,KAAK,CAACO,GAAN,WAAaL,gBAAb,SAAgCW,EAAhC,EAAP;AACH;;AACDC,EAAAA,SAAS,CAACR,QAAD,EAAWO,EAAX,EAAe;AAAI;AACxB,WAAOb,KAAK,CAACe,MAAN,WAAgBb,gBAAhB,SAAmCW,EAAnC,EAAP;AACH;;AACDG,EAAAA,SAAS,CAACC,QAAD,EAAWL,QAAX,EAAqBC,EAArB,EAAyBK,GAAzB,EAA8B;AACnC,WAAOlB,KAAK,CAACmB,GAAN,WAAajB,gBAAb,SAAgCW,EAAhC,GAAsCK,GAAtC,CAAP;AACH;;AACDE,EAAAA,SAAS,CAACH,QAAD,EAAWL,QAAX,EAAqBC,EAArB,EAAyBK,GAAzB,EAA8B;AACnC,WAAOlB,KAAK,CAACqB,IAAN,WAAclB,cAAd,GAAgCe,GAAhC,CAAP,CADmC,CACa;AACnD;;AAxBgB;;AA0BrB,eAAe,IAAId,cAAJ,EAAf,C,CAAoC","sourcesContent":["//   data service method to call the REST API using AXIOS framework\r\nimport axios from 'axios'\r\n\r\nconst API_URL = 'http://localhost:8080'\r\nconst GET_ALL_JOBS_URL = `${API_URL}/jobs/`\r\nconst CREATE_JOB_URL = `${API_URL}/jobs/`\r\n\r\nclass JobDataService {\r\n    //  Call the /jobs endpoint to retrieve all jobs. There are axios promises.    \r\n    retrieveAllJobs() {\r\n        let userName = \"Neil\"\r\n        return axios.get(`${GET_ALL_JOBS_URL}`, \r\n            {   //  Send header for authentication\r\n                headers: {\r\n                    authorization: YOUR_HEADER_VAL\r\n                }\r\n            }\r\n        );\r\n\r\n    }\r\n    retrieveJob(employer, id) {\r\n        return axios.get(`${GET_ALL_JOBS_URL}${id}`);\r\n    }\r\n    deleteJob(userName, id) {   //  Name of user and id to delete\r\n        return axios.delete(`${GET_ALL_JOBS_URL}${id}`);\r\n    }\r\n    updateJob(jobTitle, employer, id, job) {\r\n        return axios.put(`${GET_ALL_JOBS_URL}${id}`, job);\r\n    }\r\n    createJob(jobTitle, employer, id, job) {\r\n        return axios.post(`${CREATE_JOB_URL}`, job);    //  put user id here as url path\r\n    }\r\n}\r\nexport default new JobDataService() //  create an instance of JobDataService and make it available for other components."]},"metadata":{},"sourceType":"module"}