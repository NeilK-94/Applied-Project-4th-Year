{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\neilk\\\\eclipse-workspace\\\\Applied-Project-4th-Year\\\\front-end-portal\\\\src\\\\components\\\\_ResultsComponent.jsx\";\nimport React, { Component } from 'react';\nimport Modal from 'react-awesome-modal';\nimport JobDataService from '../service/JobDataService';\nimport AuthenticationService from '../service/AuthenticationService';\n\nclass _ResultsComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      response: this.props.response,\n      hasSearchFailed: false,\n      hasDeleteSucceeded: false,\n      visible: false,\n      deleteSuccessful: false\n    };\n    this.updateJobClicked = this.updateJobClicked.bind(this);\n    this.deleteJobClicked = this.deleteJobClicked.bind(this);\n    this.refreshJobs = this.refreshJobs.bind(this);\n  }\n\n  openModal() {\n    this.setState({\n      visible: true,\n      hasDeleteSucceeded: false,\n      deleteSuccessful: false\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      visible: false,\n      hasDeleteSucceeded: false\n    });\n  }\n\n  refreshJobs() {\n    JobDataService.retrieveJobByEmployer(this.props.searchQueryEmployer) //  Make call to the REST API\n    .then( //  Decide what to do once call is made succesfully\n    response => {\n      //console.log(response);\n      this.setState({\n        jobs: response.data\n      }); //  When response comes back with data, update the state.\n\n      if (this.state.deleteSuccessful) {\n        this.setState({\n          hasDeleteSucceeded: true\n        });\n      }\n    }); //  .catch handles unsuccessful. Add later\n  }\n\n  deleteJobClicked(id) {\n    let username = AuthenticationService.getLoggedUser();\n    JobDataService.deleteJob(username, id).then(response => {\n      this.setState({\n        deleteSuccessful: true\n      });\n      this.setState({\n        hasDeleteSucceeded: true\n      }); // this.state.deleteSuccessful = true;\n      // this.state.hasDeleteSucceeded = true;\n\n      this.refreshJobs();\n      this.closeModal();\n    });\n  }\n\n  updateJobClicked(id) {\n    this.props.history.push(\"/jobs/\".concat(id));\n  }\n\n  render() {\n    let response = this.props.response;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Employer\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Job Title\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Location\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Description\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.props.match.response.map( //  map allows you to loop around items\n    job => //  a key is used to identify a row\n    React.createElement(\"tr\", {\n      key: job.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, job.employer), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, job.jobTitle), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, job.county), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, job.description), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: () => this.openModal(job.jobTitle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"View\")), React.createElement(Modal, {\n      visible: this.state.visible,\n      width: \"500\",\n      height: \"400\",\n      effect: \"fadeInRight\",\n      onClickAway: () => this.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, job.jobTitle)), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, job.employer), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, job.county), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, job.description), React.createElement(\"button\", {\n      className: \"btn btn-info\",\n      onClick: () => this.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Close\"), React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: () => this.deleteJobClicked(job.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: () => this.updateJobClicked(job.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Update\")))))))));\n  }\n\n}\n\nexport default _ResultsComponent;","map":{"version":3,"sources":["C:/Users/neilk/eclipse-workspace/Applied-Project-4th-Year/front-end-portal/src/components/_ResultsComponent.jsx"],"names":["React","Component","Modal","JobDataService","AuthenticationService","_ResultsComponent","constructor","props","state","response","hasSearchFailed","hasDeleteSucceeded","visible","deleteSuccessful","updateJobClicked","bind","deleteJobClicked","refreshJobs","openModal","setState","closeModal","retrieveJobByEmployer","searchQueryEmployer","then","jobs","data","id","username","getLoggedUser","deleteJob","history","push","render","match","map","job","employer","jobTitle","county","description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Modal from 'react-awesome-modal';\r\nimport JobDataService from '../service/JobDataService';\r\nimport AuthenticationService from '../service/AuthenticationService';\r\n\r\nclass _ResultsComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = { \r\n            response: this.props.response,\r\n            hasSearchFailed: false,\r\n            hasDeleteSucceeded: false,\r\n            visible : false,\r\n            deleteSuccessful: false\r\n        }\r\n        this.updateJobClicked = this.updateJobClicked.bind(this);\r\n        this.deleteJobClicked = this.deleteJobClicked.bind(this)\r\n        this.refreshJobs = this.refreshJobs.bind(this)\r\n    }\r\n    openModal() {\r\n        this.setState({\r\n            visible : true,\r\n            hasDeleteSucceeded: false,\r\n            deleteSuccessful: false\r\n        });\r\n    }\r\n    closeModal() {\r\n        this.setState({\r\n            visible : false,\r\n            hasDeleteSucceeded: false\r\n        });\r\n    }\r\n    refreshJobs() {\r\n        JobDataService.retrieveJobByEmployer(this.props.searchQueryEmployer)    //  Make call to the REST API\r\n            .then(  //  Decide what to do once call is made succesfully\r\n                response => {\r\n                    //console.log(response);\r\n                    this.setState({ jobs: response.data })  //  When response comes back with data, update the state.\r\n                    if(this.state.deleteSuccessful){\r\n                        this.setState({ hasDeleteSucceeded: true })\r\n                    }\r\n                },                \r\n            )   //  .catch handles unsuccessful. Add later\r\n    }\r\n\r\n    deleteJobClicked(id) {\r\n        let username = AuthenticationService.getLoggedUser()\r\n\r\n        JobDataService.deleteJob(username, id)\r\n            .then(\r\n                response => {\r\n                    this.setState({ deleteSuccessful: true })\r\n                    this.setState({ hasDeleteSucceeded: true })\r\n\r\n                    // this.state.deleteSuccessful = true;\r\n                    // this.state.hasDeleteSucceeded = true;\r\n                    this.refreshJobs()\r\n                    this.closeModal()\r\n                }\r\n            )\r\n    }\r\n    updateJobClicked(id){\r\n        this.props.history.push(`/jobs/${id}`)\r\n    }\r\n\r\n    render() {\r\n        let response = this.props.response\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Employer</th>\r\n                                <th>Job Title</th>\r\n                                <th>Location</th>\r\n                                <th>Description</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {   \r\n                                this.props.match.response.map(    //  map allows you to loop around items\r\n                                    job =>  //  a key is used to identify a row\r\n                                        <tr key={job.id}>\r\n                                            <td>{job.employer}</td>\r\n                                            <td>{job.jobTitle}</td>\r\n                                            <td>{job.county}</td>\r\n                                            <td>{job.description}</td>\r\n                                            <td><button className=\"btn btn-success\" onClick={() => this.openModal(job.jobTitle)}>View</button></td>\r\n                                                <Modal visible={this.state.visible} width=\"500\" height=\"400\" effect=\"fadeInRight\" onClickAway={() => this.closeModal()}>\r\n                                                    <tr><div className=\"popup\">\r\n                                                        <td><h3>{job.jobTitle}</h3></td>\r\n                                                        <h4>{job.employer}</h4>\r\n                                                        <h4>{job.county}</h4>\r\n                                                        <p>{job.description}</p>\r\n                                                        <button className=\"btn btn-info\" onClick={() => this.closeModal()}>Close</button>\r\n                                                        <button className=\"btn btn-warning\" onClick={() => this.deleteJobClicked(job.id)}>Delete</button>\r\n                                                        <button className=\"btn btn-success\" onClick={() => this.updateJobClicked(job.id)}>Update</button>\r\n                                                    </div></tr>\r\n                                                </Modal>\r\n                                        </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default _ResultsComponent\r\n"]},"metadata":{},"sourceType":"module"}