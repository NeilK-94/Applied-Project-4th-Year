{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\neilk\\\\eclipse-workspace\\\\Applied-Project-4th-Year\\\\front-end-portal\\\\src\\\\components\\\\homeComponent\\\\HomeComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-awesome-modal';\nimport SearchComponent from './SearchComponent';\nimport ResultsComponent from './ResultsComponent';\nimport JobDataService from '../../service/JobDataService';\nimport AuthenticationService from '../../service/AuthenticationService';\n\nclass HomeComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jobs: [],\n      hasSearchFailed: false,\n      hasDeleteSucceeded: false,\n      visible: false,\n      deleteSuccessful: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.updateJobClicked = this.updateJobClicked.bind(this);\n    this.deleteJobClicked = this.deleteJobClicked.bind(this);\n    this.refreshJobs = this.refreshJobs.bind(this);\n  }\n\n  openModal() {\n    this.setState({\n      visible: true,\n      hasDeleteSucceeded: false,\n      deleteSuccessful: false\n    });\n  }\n\n  closeModal() {\n    let username = AuthenticationService.getLoggedUser();\n    this.setState({\n      visible: false,\n      hasDeleteSucceeded: false\n    });\n  }\n\n  refreshJobs() {\n    JobDataService.retrieveJobByEmployer(this.state.searchQueryEmployer) //  Make call to the REST API\n    .then( //  Decide what to do once call is made succesfully\n    response => {\n      //console.log(response);\n      this.setState({\n        jobs: response.data\n      }); //  When response comes back with data, update the state.\n\n      if (this.state.deleteSuccessful) {\n        this.setState({\n          hasDeleteSucceeded: true\n        });\n      }\n    }); //  .catch handles unsuccessful. Add later\n  }\n\n  deleteJobClicked(id) {\n    let username = AuthenticationService.getLoggedUser();\n    JobDataService.deleteJob(username, id).then(response => {\n      this.setState({\n        deleteSuccessful: true\n      });\n      this.setState({\n        hasDeleteSucceeded: true\n      }); // this.state.deleteSuccessful = true;\n      // this.state.hasDeleteSucceeded = true;\n\n      this.refreshJobs();\n      this.closeModal();\n    });\n  }\n\n  updateJobClicked(id) {\n    this.props.history.push(\"/jobs/\".concat(id));\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  toggleEmployerClinked() {\n    console.log(\"Employer clicked\");\n  }\n\n  toggleLocationClinked() {\n    console.log(\"Location clicked\");\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"jumbotron jumbotron-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"The Developer's Job Site\"), React.createElement(\"hr\", {\n      className: \"my-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Welcome \", this.props.match.params.username, \". You can view the latest jobs \", React.createElement(Link, {\n      to: \"/jobs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"here.\")))), this.state.hasSearchFailed && React.createElement(\"div\", {\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Failed Search\"), this.state.hasDeleteSucceeded && React.createElement(\"div\", {\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Succesfully deleted the job posting\"), React.createElement(SearchComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(ResultsComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default HomeComponent;","map":{"version":3,"sources":["C:/Users/neilk/eclipse-workspace/Applied-Project-4th-Year/front-end-portal/src/components/homeComponent/HomeComponent.jsx"],"names":["React","Component","Link","Modal","SearchComponent","ResultsComponent","JobDataService","AuthenticationService","HomeComponent","constructor","props","state","jobs","hasSearchFailed","hasDeleteSucceeded","visible","deleteSuccessful","handleChange","bind","updateJobClicked","deleteJobClicked","refreshJobs","openModal","setState","closeModal","username","getLoggedUser","retrieveJobByEmployer","searchQueryEmployer","then","response","data","id","deleteJob","history","push","event","target","name","value","toggleEmployerClinked","console","log","toggleLocationClinked","render","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Modal from 'react-awesome-modal';\r\nimport SearchComponent from './SearchComponent'\r\nimport ResultsComponent from './ResultsComponent'\r\nimport JobDataService from '../../service/JobDataService';\r\nimport AuthenticationService from '../../service/AuthenticationService';\r\n\r\nclass HomeComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = { \r\n            jobs: [],\r\n            hasSearchFailed: false,\r\n            hasDeleteSucceeded: false,\r\n            visible : false,\r\n            deleteSuccessful: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.updateJobClicked = this.updateJobClicked.bind(this);\r\n        this.deleteJobClicked = this.deleteJobClicked.bind(this)\r\n        this.refreshJobs = this.refreshJobs.bind(this)\r\n    }    \r\n\r\n    openModal() {\r\n        this.setState({\r\n            visible : true,\r\n            hasDeleteSucceeded: false,\r\n            deleteSuccessful: false\r\n        });\r\n    }\r\n    closeModal() {\r\n        let username = AuthenticationService.getLoggedUser()\r\n        this.setState({\r\n            visible : false,\r\n            hasDeleteSucceeded: false\r\n        });\r\n    }\r\n    refreshJobs() {\r\n        JobDataService.retrieveJobByEmployer(this.state.searchQueryEmployer)    //  Make call to the REST API\r\n            .then(  //  Decide what to do once call is made succesfully\r\n                response => {\r\n                    //console.log(response);\r\n                    this.setState({ jobs: response.data })  //  When response comes back with data, update the state.\r\n                    if(this.state.deleteSuccessful){\r\n                        this.setState({ hasDeleteSucceeded: true })\r\n                    }\r\n                },                \r\n            )   //  .catch handles unsuccessful. Add later\r\n    }\r\n\r\n    deleteJobClicked(id) {\r\n        let username = AuthenticationService.getLoggedUser()\r\n\r\n        JobDataService.deleteJob(username, id)\r\n            .then(\r\n                response => {\r\n                    this.setState({ deleteSuccessful: true })\r\n                    this.setState({ hasDeleteSucceeded: true })\r\n\r\n                    // this.state.deleteSuccessful = true;\r\n                    // this.state.hasDeleteSucceeded = true;\r\n                    this.refreshJobs()\r\n                    this.closeModal()\r\n                }\r\n            )\r\n    }\r\n    updateJobClicked(id){\r\n        this.props.history.push(`/jobs/${id}`)\r\n    }\r\n       \r\n    handleChange(event){\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        );\r\n    }\r\n    toggleEmployerClinked(){\r\n        console.log(\"Employer clicked\")\r\n    }\r\n    toggleLocationClinked(){\r\n        console.log(\"Location clicked\")\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n           <>\r\n                <div className=\"jumbotron jumbotron-fluid\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-5\">The Developer's Job Site</h1>\r\n                    <hr className=\"my-4\"></hr>\r\n                    <p className=\"lead\">Welcome {this.props.match.params.username}. You can view the latest jobs <Link to=\"/jobs\">here.</Link></p>\r\n                </div>\r\n                </div>\r\n                {this.state.hasSearchFailed && <div className=\"alert alert-warning\">Failed Search</div>}\r\n                {this.state.hasDeleteSucceeded && <div className=\"alert alert-warning\">Succesfully deleted the job posting</div>}\r\n                {/*  Component ********** */}\r\n                <SearchComponent />\r\n                {/*  Component ********** */}\r\n                    <br></br>\r\n                <ResultsComponent />\r\n                    {/*  Component ********** */}\r\n                \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomeComponent"]},"metadata":{},"sourceType":"module"}