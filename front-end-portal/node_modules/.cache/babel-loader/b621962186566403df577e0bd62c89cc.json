{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\neilk\\\\eclipse-workspace\\\\Applied-Project-4th-Year\\\\front-end-portal\\\\src\\\\components\\\\homeComponent\\\\SearchComponent.jsx\";\nimport React, { Component } from 'react';\nimport JobDataService from '../../service/JobDataService';\n\nclass SearchComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jobs: [],\n      searchQueryEmployer: 'Cisco',\n      searchQueryLocation: 'Galway',\n      selected: 0\n    };\n    this.searchClicked = this.searchClicked.bind(this);\n    this.searchCountyClicked = this.searchCountyClicked.bind(this);\n  }\n\n  searchClicked() {\n    this.setState({\n      hasDeleteSucceeded: false\n    }); //this.state.hasDeleteSucceeded = false\n\n    JobDataService.retrieveJobByEmployer(this.state.searchQueryEmployer).then( //  Decide what to do once call is made succesfully\n    response => {\n      //console.log(response.data);\n      this.setState({\n        jobs: response.data\n      });\n\n      if (response.data.length < 1) {\n        this.setState({\n          hasSearchFailed: true\n        });\n      } else if (response.data.length > 0) {\n        this.setState({\n          hasSearchFailed: false\n        });\n      }\n    });\n  }\n\n  searchCountyClicked() {\n    this.setState({\n      hasDeleteSucceeded: false\n    }); //this.state.hasDeleteSucceeded = false\n\n    JobDataService.retrieveJobByCounty(this.state.searchQueryLocation).then( //  Decide what to do once call is made succesfully\n    response => {\n      //console.log(response.data);\n      this.setState({\n        jobs: response.data\n      });\n\n      if (response.data.length < 1) {\n        this.setState({\n          hasSearchFailed: true\n        });\n      } else if (response.data.length > 0) {\n        this.setState({\n          hasSearchFailed: false\n        });\n      }\n    });\n  }\n\n  render() {\n    let selected = this.state.selected;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Search a job\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"You can search for jobs from a certain employer or by location.\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"toggle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-secondary\",\n      onClick: () => this.setState({\n        selected: 0\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \" Employer \"), React.createElement(\"button\", {\n      className: \"btn btn-secondary\",\n      onClick: () => this.setState({\n        selected: 1\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \" Location \")), selected === 0 && React.createElement(\"div\", {\n      id: \"employer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"searchQueryEmployer\",\n      value: this.state.searchQueryEmployer,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.searchClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Search\")), selected === 1 && React.createElement(\"div\", {\n      id: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"searchQueryLocation\",\n      value: this.state.searchQueryLocation,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.searchCountyClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"County\")))));\n  }\n\n}\n\nexport default SearchComponent;","map":{"version":3,"sources":["C:/Users/neilk/eclipse-workspace/Applied-Project-4th-Year/front-end-portal/src/components/homeComponent/SearchComponent.jsx"],"names":["React","Component","JobDataService","SearchComponent","constructor","props","state","jobs","searchQueryEmployer","searchQueryLocation","selected","searchClicked","bind","searchCountyClicked","setState","hasDeleteSucceeded","retrieveJobByEmployer","then","response","data","length","hasSearchFailed","retrieveJobByCounty","render","handleChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport JobDataService from '../../service/JobDataService';\r\n\r\n\r\nclass SearchComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = { \r\n            jobs: [],\r\n            searchQueryEmployer: 'Cisco',\r\n            searchQueryLocation: 'Galway',\r\n            selected: 0\r\n        }\r\n        this.searchClicked = this.searchClicked.bind(this);\r\n        this.searchCountyClicked = this.searchCountyClicked.bind(this);\r\n    }\r\n    searchClicked(){\r\n        this.setState({ hasDeleteSucceeded: false })\r\n        //this.state.hasDeleteSucceeded = false\r\n        JobDataService.retrieveJobByEmployer(this.state.searchQueryEmployer)\r\n        .then(  //  Decide what to do once call is made succesfully\r\n            response => {\r\n                //console.log(response.data);\r\n                this.setState({ jobs: response.data })\r\n                if(response.data.length < 1){\r\n                    this.setState({ hasSearchFailed: true })\r\n                }\r\n                else if(response.data.length > 0){\r\n                    this.setState({ hasSearchFailed: false })\r\n                }\r\n            })\r\n    }\r\n    searchCountyClicked(){\r\n        this.setState({ hasDeleteSucceeded: false })\r\n        //this.state.hasDeleteSucceeded = false\r\n        JobDataService.retrieveJobByCounty(this.state.searchQueryLocation)\r\n        .then(  //  Decide what to do once call is made succesfully\r\n            response => {\r\n                //console.log(response.data);\r\n                this.setState({ jobs: response.data })\r\n                if(response.data.length < 1){\r\n                    this.setState({ hasSearchFailed: true })\r\n                }\r\n                else if(response.data.length > 0){\r\n                    this.setState({ hasSearchFailed: false })\r\n                }\r\n            })\r\n    } \r\n\r\n    render() {\r\n        let selected = this.state.selected  \r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n\r\n                    <h4>Search a job</h4>\r\n                    <p>You can search for jobs from a certain employer or by location.</p>\r\n                    <div className=\"container\">\r\n                    <span id=\"toggle\">\r\n                        <button className=\"btn btn-secondary\" onClick={() => this.setState({ selected: 0 })}> Employer </button>\r\n                        <button className=\"btn btn-secondary\" onClick={() => this.setState({ selected: 1 })}> Location </button>     \r\n                    </span>\r\n                        {(selected === 0) && <div id=\"employer\">\r\n                        <input type=\"text\" name=\"searchQueryEmployer\" value={this.state.searchQueryEmployer} onChange={this.handleChange}></input>\r\n                        <button className=\"btn btn-success\" onClick={this.searchClicked}>Search</button></div>}\r\n                        {(selected === 1) && <div id=\"right\">\r\n                        <input type=\"text\" name=\"searchQueryLocation\" value={this.state.searchQueryLocation} onChange={this.handleChange}></input>\r\n                        <button className=\"btn btn-success\" onClick={this.searchCountyClicked}>County</button></div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchComponent\r\n"]},"metadata":{},"sourceType":"module"}