{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\neilk\\\\eclipse-workspace\\\\Applied-Project-4th-Year\\\\front-end-portal\\\\src\\\\components\\\\HomeComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-awesome-modal';\nimport _SearchComponent from './_SearchComponent';\nimport JobDataService from '../service/JobDataService';\nimport AuthenticationService from '../service/AuthenticationService';\n\nclass HomeComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jobs: [],\n      searchQueryEmployer: 'Cisco',\n      searchQueryLocation: 'Galway',\n      hasSearchFailed: false,\n      hasDeleteSucceeded: false,\n      visible: false,\n      selected: 0,\n      deleteSuccessful: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.searchClicked = this.searchClicked.bind(this);\n    this.searchCountyClicked = this.searchCountyClicked.bind(this);\n    this.updateJobClicked = this.updateJobClicked.bind(this);\n    this.deleteJobClicked = this.deleteJobClicked.bind(this);\n    this.refreshJobs = this.refreshJobs.bind(this);\n  }\n\n  openModal() {\n    this.setState({\n      visible: true,\n      hasDeleteSucceeded: false,\n      deleteSuccessful: false\n    });\n  }\n\n  closeModal() {\n    let username = AuthenticationService.getLoggedUser();\n    this.setState({\n      visible: false,\n      hasDeleteSucceeded: false\n    });\n  }\n\n  refreshJobs() {\n    JobDataService.retrieveJobByEmployer(this.state.searchQueryEmployer) //  Make call to the REST API\n    .then( //  Decide what to do once call is made succesfully\n    response => {\n      //console.log(response);\n      this.setState({\n        jobs: response.data\n      }); //  When response comes back with data, update the state.\n\n      if (this.state.deleteSuccessful) {\n        this.setState({\n          hasDeleteSucceeded: true\n        });\n      }\n    }); //  .catch handles unsuccessful. Add later\n  }\n\n  deleteJobClicked(id) {\n    let username = AuthenticationService.getLoggedUser();\n    JobDataService.deleteJob(username, id).then(response => {\n      this.setState({\n        deleteSuccessful: true\n      });\n      this.setState({\n        hasDeleteSucceeded: true\n      }); // this.state.deleteSuccessful = true;\n      // this.state.hasDeleteSucceeded = true;\n\n      this.refreshJobs();\n      this.closeModal();\n    });\n  }\n\n  updateJobClicked(id) {\n    this.props.history.push(\"/jobs/\".concat(id));\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"jumbotron jumbotron-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"The Developer's Job Site\"), React.createElement(\"hr\", {\n      className: \"my-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Welcome \", this.props.match.params.username, \". You can view the latest jobs \", React.createElement(Link, {\n      to: \"/jobs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"here.\")))), React.createElement(_SearchComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Employer\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Job Title\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Location\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Description\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.state.jobs.map( //  map allows you to loop around items\n    job => //  a key is used to identify a row\n    React.createElement(\"tr\", {\n      key: job.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, job.employer), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, job.jobTitle), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, job.county), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, job.description), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: () => this.openModal(job.jobTitle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"View\")), React.createElement(Modal, {\n      visible: this.state.visible,\n      width: \"500\",\n      height: \"400\",\n      effect: \"fadeInRight\",\n      onClickAway: () => this.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, job.jobTitle)), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, job.employer), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, job.county), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, job.description), React.createElement(\"button\", {\n      className: \"btn btn-info\",\n      onClick: () => this.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Close\"), React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: () => this.deleteJobClicked(job.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: () => this.updateJobClicked(job.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Update\")))))))));\n  }\n\n}\n\nexport default HomeComponent;","map":{"version":3,"sources":["C:/Users/neilk/eclipse-workspace/Applied-Project-4th-Year/front-end-portal/src/components/HomeComponent.jsx"],"names":["React","Component","Link","Modal","_SearchComponent","JobDataService","AuthenticationService","HomeComponent","constructor","props","state","jobs","searchQueryEmployer","searchQueryLocation","hasSearchFailed","hasDeleteSucceeded","visible","selected","deleteSuccessful","handleChange","bind","searchClicked","searchCountyClicked","updateJobClicked","deleteJobClicked","refreshJobs","openModal","setState","closeModal","username","getLoggedUser","retrieveJobByEmployer","then","response","data","id","deleteJob","history","push","render","match","params","map","job","employer","jobTitle","county","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,qBAAP,MAAkC,kCAAlC;;AAEA,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AAClCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,mBAAmB,EAAE,OAFZ;AAGTC,MAAAA,mBAAmB,EAAE,QAHZ;AAITC,MAAAA,eAAe,EAAE,KAJR;AAKTC,MAAAA,kBAAkB,EAAE,KALX;AAMTC,MAAAA,OAAO,EAAG,KAND;AAOTC,MAAAA,QAAQ,EAAE,CAPD;AAQTC,MAAAA,gBAAgB,EAAE;AART,KAAb;AAUA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKE,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBF,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKG,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBH,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKI,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBJ,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKK,WAAL,GAAmB,KAAKA,WAAL,CAAiBL,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDM,EAAAA,SAAS,GAAG;AACR,SAAKC,QAAL,CAAc;AACVX,MAAAA,OAAO,EAAG,IADA;AAEVD,MAAAA,kBAAkB,EAAE,KAFV;AAGVG,MAAAA,gBAAgB,EAAE;AAHR,KAAd;AAKH;;AACDU,EAAAA,UAAU,GAAG;AACT,QAAIC,QAAQ,GAAGvB,qBAAqB,CAACwB,aAAtB,EAAf;AACA,SAAKH,QAAL,CAAc;AACVX,MAAAA,OAAO,EAAG,KADA;AAEVD,MAAAA,kBAAkB,EAAE;AAFV,KAAd;AAIH;;AACDU,EAAAA,WAAW,GAAG;AACVpB,IAAAA,cAAc,CAAC0B,qBAAf,CAAqC,KAAKrB,KAAL,CAAWE,mBAAhD,EAAwE;AAAxE,KACKoB,IADL,EACY;AACJC,IAAAA,QAAQ,IAAI;AACR;AACA,WAAKN,QAAL,CAAc;AAAEhB,QAAAA,IAAI,EAAEsB,QAAQ,CAACC;AAAjB,OAAd,EAFQ,CAEgC;;AACxC,UAAG,KAAKxB,KAAL,CAAWQ,gBAAd,EAA+B;AAC3B,aAAKS,QAAL,CAAc;AAAEZ,UAAAA,kBAAkB,EAAE;AAAtB,SAAd;AACH;AACJ,KART,EADU,CAUF;AACX;;AAEDS,EAAAA,gBAAgB,CAACW,EAAD,EAAK;AACjB,QAAIN,QAAQ,GAAGvB,qBAAqB,CAACwB,aAAtB,EAAf;AAEAzB,IAAAA,cAAc,CAAC+B,SAAf,CAAyBP,QAAzB,EAAmCM,EAAnC,EACKH,IADL,CAEQC,QAAQ,IAAI;AACR,WAAKN,QAAL,CAAc;AAAET,QAAAA,gBAAgB,EAAE;AAApB,OAAd;AACA,WAAKS,QAAL,CAAc;AAAEZ,QAAAA,kBAAkB,EAAE;AAAtB,OAAd,EAFQ,CAIR;AACA;;AACA,WAAKU,WAAL;AACA,WAAKG,UAAL;AACH,KAVT;AAYH;;AACDL,EAAAA,gBAAgB,CAACY,EAAD,EAAI;AAChB,SAAK1B,KAAL,CAAW4B,OAAX,CAAmBC,IAAnB,iBAAiCH,EAAjC;AACH;;AAKDI,EAAAA,MAAM,GAAG;AACL,WACG,0CACK;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA6B,KAAK9B,KAAL,CAAW+B,KAAX,CAAiBC,MAAjB,CAAwBZ,QAArD,qCAA6F,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA7F,CAHJ,CADA,CADL,EASK,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATL,EAWS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXT,EAYS;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJJ,CADJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKnB,KAAL,CAAWC,IAAX,CAAgB+B,GAAhB,EAAwB;AACpBC,IAAAA,GAAG,IAAK;AACJ;AAAI,MAAA,GAAG,EAAEA,GAAG,CAACR,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKQ,GAAG,CAACC,QAAT,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,GAAG,CAACE,QAAT,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,GAAG,CAACG,MAAT,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,GAAG,CAACI,WAAT,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAM,KAAKrB,SAAL,CAAeiB,GAAG,CAACE,QAAnB,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAJ,CALJ,EAMQ,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAKnC,KAAL,CAAWM,OAA3B;AAAoC,MAAA,KAAK,EAAC,KAA1C;AAAgD,MAAA,MAAM,EAAC,KAAvD;AAA6D,MAAA,MAAM,EAAC,aAApE;AAAkF,MAAA,WAAW,EAAE,MAAM,KAAKY,UAAL,EAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKe,GAAG,CAACE,QAAT,CAAJ,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,GAAG,CAACC,QAAT,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,GAAG,CAACG,MAAT,CAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,GAAG,CAACI,WAAR,CAJA,EAKA;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,OAAO,EAAE,MAAM,KAAKnB,UAAL,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALA,EAMA;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAM,KAAKJ,gBAAL,CAAsBmB,GAAG,CAACR,EAA1B,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANA,EAOA;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAM,KAAKZ,gBAAL,CAAsBoB,GAAG,CAACR,EAA1B,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPA,CAAJ,CADJ,CANR,CAFR,CAFR,CATJ,CAZT,CADH;AAoDH;;AA7HiC;;AAgItC,eAAe5B,aAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Modal from 'react-awesome-modal';\r\nimport _SearchComponent from './_SearchComponent'\r\nimport JobDataService from '../service/JobDataService';\r\nimport AuthenticationService from '../service/AuthenticationService';\r\n\r\nclass HomeComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = { \r\n            jobs: [],\r\n            searchQueryEmployer: 'Cisco',\r\n            searchQueryLocation: 'Galway',\r\n            hasSearchFailed: false,\r\n            hasDeleteSucceeded: false,\r\n            visible : false,\r\n            selected: 0,\r\n            deleteSuccessful: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.searchClicked = this.searchClicked.bind(this);\r\n        this.searchCountyClicked = this.searchCountyClicked.bind(this);\r\n        this.updateJobClicked = this.updateJobClicked.bind(this);\r\n        this.deleteJobClicked = this.deleteJobClicked.bind(this)\r\n        this.refreshJobs = this.refreshJobs.bind(this)\r\n    }    \r\n\r\n    openModal() {\r\n        this.setState({\r\n            visible : true,\r\n            hasDeleteSucceeded: false,\r\n            deleteSuccessful: false\r\n        });\r\n    }\r\n    closeModal() {\r\n        let username = AuthenticationService.getLoggedUser()\r\n        this.setState({\r\n            visible : false,\r\n            hasDeleteSucceeded: false\r\n        });\r\n    }\r\n    refreshJobs() {\r\n        JobDataService.retrieveJobByEmployer(this.state.searchQueryEmployer)    //  Make call to the REST API\r\n            .then(  //  Decide what to do once call is made succesfully\r\n                response => {\r\n                    //console.log(response);\r\n                    this.setState({ jobs: response.data })  //  When response comes back with data, update the state.\r\n                    if(this.state.deleteSuccessful){\r\n                        this.setState({ hasDeleteSucceeded: true })\r\n                    }\r\n                },                \r\n            )   //  .catch handles unsuccessful. Add later\r\n    }\r\n\r\n    deleteJobClicked(id) {\r\n        let username = AuthenticationService.getLoggedUser()\r\n\r\n        JobDataService.deleteJob(username, id)\r\n            .then(\r\n                response => {\r\n                    this.setState({ deleteSuccessful: true })\r\n                    this.setState({ hasDeleteSucceeded: true })\r\n\r\n                    // this.state.deleteSuccessful = true;\r\n                    // this.state.hasDeleteSucceeded = true;\r\n                    this.refreshJobs()\r\n                    this.closeModal()\r\n                }\r\n            )\r\n    }\r\n    updateJobClicked(id){\r\n        this.props.history.push(`/jobs/${id}`)\r\n    }\r\n\r\n          \r\n\r\n\r\n    render() {\r\n        return (\r\n           <>\r\n                <div className=\"jumbotron jumbotron-fluid\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-5\">The Developer's Job Site</h1>\r\n                    <hr className=\"my-4\"></hr>\r\n                    <p className=\"lead\">Welcome {this.props.match.params.username}. You can view the latest jobs <Link to=\"/jobs\">here.</Link></p>\r\n                </div>\r\n                </div>\r\n                {/*  Component ********** */}\r\n                <_SearchComponent />\r\n                    {/*  Component ********** */}\r\n                    <br></br>\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Employer</th>\r\n                                <th>Job Title</th>\r\n                                <th>Location</th>\r\n                                <th>Description</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {   \r\n                                this.state.jobs.map(    //  map allows you to loop around items\r\n                                    job =>  //  a key is used to identify a row\r\n                                        <tr key={job.id}>\r\n                                            <td>{job.employer}</td>\r\n                                            <td>{job.jobTitle}</td>\r\n                                            <td>{job.county}</td>\r\n                                            <td>{job.description}</td>\r\n                                            <td><button className=\"btn btn-success\" onClick={() => this.openModal(job.jobTitle)}>View</button></td>\r\n                                                <Modal visible={this.state.visible} width=\"500\" height=\"400\" effect=\"fadeInRight\" onClickAway={() => this.closeModal()}>\r\n                                                    <tr><div className=\"popup\">\r\n                                                        <td><h3>{job.jobTitle}</h3></td>\r\n                                                        <h4>{job.employer}</h4>\r\n                                                        <h4>{job.county}</h4>\r\n                                                        <p>{job.description}</p>\r\n                                                        <button className=\"btn btn-info\" onClick={() => this.closeModal()}>Close</button>\r\n                                                        <button className=\"btn btn-warning\" onClick={() => this.deleteJobClicked(job.id)}>Delete</button>\r\n                                                        <button className=\"btn btn-success\" onClick={() => this.updateJobClicked(job.id)}>Update</button>\r\n                                                    </div></tr>\r\n                                                </Modal>\r\n                                        </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    {/*  Component ********** */}\r\n                \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomeComponent"]},"metadata":{},"sourceType":"module"}