{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\neilk\\\\eclipse-workspace\\\\Applied-Project-4th-Year\\\\front-end-portal\\\\src\\\\components\\\\_SearchComponent.jsx\";\nimport React, { Component } from 'react';\nexport class _SearchComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jobs: [],\n      searchQueryEmployer: 'Cisco',\n      searchQueryLocation: 'Galway',\n      hasSearchFailed: false,\n      hasDeleteSucceeded: false,\n      visible: false,\n      selected: 0,\n      deleteSuccessful: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.searchEmployerClicked = this.searchEmployerClicked.bind(this);\n    this.searchLocationClicked = this.searchLocationClicked.bind(this);\n    this.updateJobClicked = this.updateJobClicked.bind(this);\n    this.deleteJobClicked = this.deleteJobClicked.bind(this);\n    this.refreshJobs = this.refreshJobs.bind(this);\n  }\n\n  searchEmployerClicked() {\n    this.setState({\n      hasDeleteSucceeded: false\n    }); //this.state.hasDeleteSucceeded = false\n\n    JobDataService.retrieveJobByEmployer(this.state.searchQueryEmployer).then( //  Decide what to do once call is made succesfully\n    response => {\n      //console.log(response.data);\n      this.setState({\n        jobs: response.data\n      });\n\n      if (response.data.length < 1) {\n        this.setState({\n          hasSearchFailed: true\n        });\n      } else if (response.data.length > 0) {\n        this.setState({\n          hasSearchFailed: false\n        });\n      }\n    });\n  }\n\n  searchLocationClicked() {\n    this.setState({\n      hasDeleteSucceeded: false\n    }); //this.state.hasDeleteSucceeded = false\n\n    JobDataService.retrieveJobByCounty(this.state.searchQueryLocation).then( //  Decide what to do once call is made succesfully\n    response => {\n      //console.log(response.data);\n      this.setState({\n        jobs: response.data\n      });\n\n      if (response.data.length < 1) {\n        this.setState({\n          hasSearchFailed: true\n        });\n      } else if (response.data.length > 0) {\n        this.setState({\n          hasSearchFailed: false\n        });\n      }\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    let selected = this.state.selected;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.hasSearchFailed && React.createElement(\"div\", {\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Failed Search\"), this.state.hasDeleteSucceeded && React.createElement(\"div\", {\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Succesfully deleted the job posting\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Search a job\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"You can search for jobs from a certain employer or by location.\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"toggle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-secondary\",\n      onClick: () => this.setState({\n        selected: 0\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \" Employer \"), React.createElement(\"button\", {\n      className: \"btn btn-secondary\",\n      onClick: () => this.setState({\n        selected: 1\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \" Location \")), selected === 0 && React.createElement(\"div\", {\n      id: \"employer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"searchQueryEmployer\",\n      value: this.state.searchQueryEmployer,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.searchClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Search\")), selected === 1 && React.createElement(\"div\", {\n      id: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"searchQueryLocation\",\n      value: this.state.searchQueryLocation,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.searchCountyClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"County\")))));\n  }\n\n}\nexport default _SearchComponent;","map":{"version":3,"sources":["C:/Users/neilk/eclipse-workspace/Applied-Project-4th-Year/front-end-portal/src/components/_SearchComponent.jsx"],"names":["React","Component","_SearchComponent","constructor","props","state","jobs","searchQueryEmployer","searchQueryLocation","hasSearchFailed","hasDeleteSucceeded","visible","selected","deleteSuccessful","handleChange","bind","searchEmployerClicked","searchLocationClicked","updateJobClicked","deleteJobClicked","refreshJobs","setState","JobDataService","retrieveJobByEmployer","then","response","data","length","retrieveJobByCounty","event","target","name","value","render","searchClicked","searchCountyClicked"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class _SearchComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = { \r\n            jobs: [],\r\n            searchQueryEmployer: 'Cisco',\r\n            searchQueryLocation: 'Galway',\r\n            hasSearchFailed: false,\r\n            hasDeleteSucceeded: false,\r\n            visible : false,\r\n            selected: 0,\r\n            deleteSuccessful: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.searchEmployerClicked = this.searchEmployerClicked.bind(this);\r\n        this.searchLocationClicked = this.searchLocationClicked.bind(this);\r\n        this.updateJobClicked = this.updateJobClicked.bind(this);\r\n        this.deleteJobClicked = this.deleteJobClicked.bind(this)\r\n        this.refreshJobs = this.refreshJobs.bind(this)\r\n    } \r\n\r\n    searchEmployerClicked(){\r\n        this.setState({ hasDeleteSucceeded: false })\r\n        //this.state.hasDeleteSucceeded = false\r\n        JobDataService.retrieveJobByEmployer(this.state.searchQueryEmployer)\r\n        .then(  //  Decide what to do once call is made succesfully\r\n            response => {\r\n                //console.log(response.data);\r\n                this.setState({ jobs: response.data })\r\n                if(response.data.length < 1){\r\n                    this.setState({ hasSearchFailed: true })\r\n                }\r\n                else if(response.data.length > 0){\r\n                    this.setState({ hasSearchFailed: false })\r\n                }\r\n            })\r\n    }\r\n    searchLocationClicked(){\r\n        this.setState({ hasDeleteSucceeded: false })\r\n        //this.state.hasDeleteSucceeded = false\r\n        JobDataService.retrieveJobByCounty(this.state.searchQueryLocation)\r\n        .then(  //  Decide what to do once call is made succesfully\r\n            response => {\r\n                //console.log(response.data);\r\n                this.setState({ jobs: response.data })\r\n                if(response.data.length < 1){\r\n                    this.setState({ hasSearchFailed: true })\r\n                }\r\n                else if(response.data.length > 0){\r\n                    this.setState({ hasSearchFailed: false })\r\n                }\r\n            })\r\n    }  \r\n\r\n    handleChange(event){\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        );\r\n    }\r\n    render() {\r\n        let selected = this.state.selected\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    {this.state.hasSearchFailed && <div className=\"alert alert-warning\">Failed Search</div>}\r\n                    {this.state.hasDeleteSucceeded && <div className=\"alert alert-warning\">Succesfully deleted the job posting</div>}\r\n                    <h4>Search a job</h4>\r\n                    <p>You can search for jobs from a certain employer or by location.</p>\r\n                    <div className=\"container\">\r\n                    <span id=\"toggle\">\r\n                        <button className=\"btn btn-secondary\" onClick={() => this.setState({ selected: 0 })}> Employer </button>\r\n                        <button className=\"btn btn-secondary\" onClick={() => this.setState({ selected: 1 })}> Location </button>     \r\n                    </span>\r\n                        {(selected === 0) && <div id=\"employer\">\r\n                        <input type=\"text\" name=\"searchQueryEmployer\" value={this.state.searchQueryEmployer} onChange={this.handleChange}></input>\r\n                        <button className=\"btn btn-success\" onClick={this.searchClicked}>Search</button></div>}\r\n                        {(selected === 1) && <div id=\"right\">\r\n                        <input type=\"text\" name=\"searchQueryLocation\" value={this.state.searchQueryLocation} onChange={this.handleChange}></input>\r\n                        <button className=\"btn btn-success\" onClick={this.searchCountyClicked}>County</button></div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default _SearchComponent\r\n"]},"metadata":{},"sourceType":"module"}