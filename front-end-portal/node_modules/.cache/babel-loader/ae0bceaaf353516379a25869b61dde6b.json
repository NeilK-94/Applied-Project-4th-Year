{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\neilk\\\\eclipse-workspace\\\\Applied-Project-4th-Year\\\\front-end-portal\\\\src\\\\component\\\\HomeComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-awesome-modal';\nimport JobDataService from '../service/JobDataService';\nimport AuthenticationService from '../service/AuthenticationService';\n\nclass HomeComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jobs: [],\n      searchQuery: 'Cisco',\n      hasSearchFailed: false,\n      visible: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.searchClicked = this.searchClicked.bind(this);\n    this.viewJobClicked = this.viewJobClicked.bind(this);\n    this.deleteJobClicked = this.deleteJobClicked.bind(this);\n  }\n\n  openModal() {\n    this.setState({\n      visible: true\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      visible: false\n    });\n    this.props.history.push(\"/jobs/\".concat(id));\n  }\n\n  deleteJobClicked(id) {\n    let username = AuthenticationService.getLoggedUser(); //console.log(id + username)\n\n    JobDataService.deleteJob(username, id).then(response => {\n      console.log(response);\n      this.setState({\n        message: \"Succesfully deleted the job posting\"\n      });\n      this.closeModal();\n    });\n  }\n\n  viewJobClicked(id) {\n    this.props.history.push(\"/jobs/\".concat(id));\n  }\n\n  searchClicked() {\n    JobDataService.retrieveJobByEmployer(this.state.searchQuery).then( //  Decide what to do once call is made succesfully\n    response => {\n      //console.log(response.data);\n      this.setState({\n        jobs: response.data\n      });\n\n      if (response.data.length < 1) {\n        this.setState({\n          hasSearchFailed: true\n        });\n      } else if (response.data.length > 0) {\n        this.setState({\n          hasSearchFailed: false\n        });\n      }\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"jumbotron jumbotron-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Welcome\"), React.createElement(\"hr\", {\n      className: \"my-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Welcome \", this.props.match.params.username, \". You can view the latest jobs \", React.createElement(Link, {\n      to: \"/jobs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"here.\")))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Search a job\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"You can search for jobs from a certain employer.\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.hasSearchFailed && React.createElement(\"div\", {\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Failed Search\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"searchQuery\",\n      value: this.state.searchQuery,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.searchClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Search\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Employer\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Job Title\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Description\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.jobs.map( //  map allows you to loop around items\n    job => //  a key is used to identify a row\n    React.createElement(\"tr\", {\n      key: job.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, job.employer), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, job.jobTitle), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, job.description), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: () => this.openModal(job.jobTitle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"View\")), React.createElement(Modal, {\n      visible: this.state.visible,\n      width: \"400\",\n      height: \"300\",\n      effect: \"fadeInUp\",\n      onClickAway: () => this.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, job.jobTitle), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Some Contents\"), React.createElement(\"button\", {\n      className: \"btn btn-info\",\n      onClick: () => this.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Close\"), React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: () => this.deleteJobClicked(job.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Delete\")))))))))));\n  }\n\n}\n\nexport default HomeComponent;","map":{"version":3,"sources":["C:/Users/neilk/eclipse-workspace/Applied-Project-4th-Year/front-end-portal/src/component/HomeComponent.jsx"],"names":["React","Component","Link","Modal","JobDataService","AuthenticationService","HomeComponent","constructor","props","state","jobs","searchQuery","hasSearchFailed","visible","handleChange","bind","searchClicked","viewJobClicked","deleteJobClicked","openModal","setState","closeModal","history","push","id","username","getLoggedUser","deleteJob","then","response","console","log","message","retrieveJobByEmployer","data","length","event","target","name","value","render","match","params","map","job","employer","jobTitle","description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Modal from 'react-awesome-modal';\r\n\r\nimport JobDataService from '../service/JobDataService';\r\nimport AuthenticationService from '../service/AuthenticationService';\r\n\r\nclass HomeComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = { \r\n            jobs: [],\r\n            searchQuery: 'Cisco',\r\n            hasSearchFailed: false,\r\n            visible : false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.searchClicked = this.searchClicked.bind(this);\r\n        this.viewJobClicked = this.viewJobClicked.bind(this);\r\n        this.deleteJobClicked = this.deleteJobClicked.bind(this)\r\n    }    \r\n\r\n    openModal() {\r\n        this.setState({\r\n            visible : true\r\n        });\r\n    }\r\n    closeModal() {\r\n        this.setState({\r\n            visible : false\r\n        });\r\n        this.props.history.push(`/jobs/${id}`)\r\n    }\r\n\r\n    deleteJobClicked(id) {\r\n        let username = AuthenticationService.getLoggedUser()\r\n        //console.log(id + username)\r\n        JobDataService.deleteJob(username, id)\r\n            .then(\r\n                response => {\r\n                    console.log(response);\r\n                    this.setState({ message: `Succesfully deleted the job posting` })\r\n                    this.closeModal()\r\n                }\r\n            )\r\n    }\r\n    viewJobClicked(id){\r\n        this.props.history.push(`/jobs/${id}`)\r\n    }\r\n\r\n    searchClicked(){\r\n        JobDataService.retrieveJobByEmployer(this.state.searchQuery)\r\n        .then(  //  Decide what to do once call is made succesfully\r\n            response => {\r\n                //console.log(response.data);\r\n                this.setState({ jobs: response.data })\r\n                if(response.data.length < 1){\r\n                    this.setState({ hasSearchFailed: true })\r\n                }\r\n                else if(response.data.length > 0){\r\n                    this.setState({ hasSearchFailed: false })\r\n                }\r\n            })\r\n    }\r\n        \r\n    handleChange(event){\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n           <>\r\n                <div className=\"jumbotron jumbotron-fluid\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-5\">Welcome</h1>\r\n                    <hr className=\"my-4\"></hr>\r\n                    <p className=\"lead\">Welcome {this.props.match.params.username}. You can view the latest jobs <Link to=\"/jobs\">here.</Link></p>\r\n                </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <h4>Search a job</h4>\r\n                    <p>You can search for jobs from a certain employer.</p>\r\n                    <div className=\"container\">\r\n                    {this.state.hasSearchFailed && <div className=\"alert alert-warning\">Failed Search</div>}\r\n\r\n                    <input type=\"text\" name=\"searchQuery\" value={this.state.searchQuery} onChange={this.handleChange}></input>\r\n                    <button className=\"btn btn-success\" onClick={this.searchClicked}>Search</button>\r\n                    </div>\r\n                    <div>\r\n                    <br></br>\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Employer</th>\r\n                                <th>Job Title</th>\r\n                                <th>Description</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {   \r\n                                this.state.jobs.map(    //  map allows you to loop around items\r\n                                    job =>  //  a key is used to identify a row\r\n                                        <tr key={job.id}>\r\n                                            <td>{job.employer}</td>\r\n                                            <td>{job.jobTitle}</td>\r\n                                            <td>{job.description}</td>\r\n                                            {/* <td><button className=\"btn btn-success\" onClick={() => this.viewJobClicked(job.id)}>View</button></td> */}\r\n                                            <td><button className=\"btn btn-success\" onClick={() => this.openModal(job.jobTitle)}>View</button></td>\r\n                                                <Modal visible={this.state.visible} width=\"400\" height=\"300\" effect=\"fadeInUp\" onClickAway={() => this.closeModal()}>\r\n                                                    <tr><div className=\"popup\">\r\n                                                        <h3>{job.jobTitle}</h3>\r\n                                                        <p>Some Contents</p>\r\n                                                        <button className=\"btn btn-info\" onClick={() => this.closeModal()}>Close</button>\r\n                                                        <button className=\"btn btn-warning\" onClick={() => this.deleteJobClicked(job.id)}>Delete</button>\r\n                                                    </div></tr>\r\n                                                </Modal>\r\n                                        </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomeComponent"]},"metadata":{},"sourceType":"module"}