{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\neilk\\\\eclipse-workspace\\\\Applied-Project-4th-Year\\\\front-end-portal\\\\src\\\\component\\\\JobComponent.jsx\";\nimport React, { Component } from 'react';\nimport JobDataService from '../service/JobDataService';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nclass JobComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      description: ''\n    }; //   this.onSubmit = this.onSubmit.bind(this)\n    //   this.validate = this.validate.bind(this)\n  }\n\n  componentDidMount() {\n    console.log(this.state.id);\n\n    if (this.state.employer == -1) {\n      return;\n    }\n\n    JobDataService.retrieveJob(this.state.employer, this.state.id).then(response => this.setState({\n      description: response.data.description\n    }));\n  } //   validate(values) {\n  //     let errors = {}\n  //     if (!values.description) {\n  //         errors.description = 'Enter a Description'\n  //     } else if (values.description.length < 5) {\n  //         errors.description = 'Enter atleast 5 Characters in Description'\n  //     }\n  //     return errors\n  //   }\n  //   onSubmit(values) {\n  //     let username = INSTRUCTOR\n  //     let course = {\n  //         id: this.state.id,\n  //         description: values.description\n  //     }\n  //     if (this.state.id === -1) {\n  //         CourseDataService.createCourse(username, course)\n  //             .then(() => this.props.history.push('/courses'))\n  //     } else {\n  //         CourseDataService.updateCourse(username, this.state.id, course)\n  //             .then(() => this.props.history.push('/courses'))\n  //     }\n  //     console.log(values);\n  //   }\n\n\n  render() {\n    let _this$state = this.state,\n        description = _this$state.description,\n        id = _this$state.id;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Job\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Formik, {\n      initialValues: {},\n      onSubmit: this.onSubmit,\n      validateOnChange: false,\n      validateOnBlur: false,\n      validate: this.validate,\n      enableReinitialize: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, props => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(ErrorMessage, {\n      name: \"description\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Id\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"id\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Save\")))));\n  }\n\n}\n\nexport default JobComponent;","map":{"version":3,"sources":["C:/Users/neilk/eclipse-workspace/Applied-Project-4th-Year/front-end-portal/src/component/JobComponent.jsx"],"names":["React","Component","JobDataService","Formik","Form","Field","ErrorMessage","JobComponent","constructor","props","state","id","match","params","description","componentDidMount","console","log","employer","retrieveJob","then","response","setState","data","render","onSubmit","validate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AACnCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,EAAE,EAAE,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBF,EADjB;AAETG,MAAAA,WAAW,EAAE;AAFJ,KAAb,CAHe,CAOjB;AACA;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,EAAvB;;AACA,QAAI,KAAKD,KAAL,CAAWQ,QAAX,IAAuB,CAAC,CAA5B,EAA+B;AAC3B;AACH;;AACDhB,IAAAA,cAAc,CAACiB,WAAf,CAA2B,KAAKT,KAAL,CAAWQ,QAAtC,EAAgD,KAAKR,KAAL,CAAWC,EAA3D,EACCS,IADD,CACMC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAC5BR,MAAAA,WAAW,EAAEO,QAAQ,CAACE,IAAT,CAAcT;AADC,KAAd,CADlB;AAIH,GApBkC,CAsBrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEEU,EAAAA,MAAM,GAAG;AAAA,sBACmB,KAAKd,KADxB;AAAA,QACDI,WADC,eACDA,WADC;AAAA,QACYH,EADZ,eACYA,EADZ;AAEP,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,aAAa,EAAE,EADnB;AAEI,MAAA,QAAQ,EAAE,KAAKc,QAFnB;AAGI,MAAA,gBAAgB,EAAE,KAHtB;AAII,MAAA,cAAc,EAAE,KAJpB;AAKI,MAAA,QAAQ,EAAE,KAAKC,QALnB;AAMI,MAAA,kBAAkB,EAAE,IANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUSjB,KAAD,IACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,aAAnB;AAAiC,MAAA,SAAS,EAAC,KAA3C;AACI,MAAA,SAAS,EAAC,qBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI;AAAU,MAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,IAAI,EAAC,MAArC;AAA4C,MAAA,IAAI,EAAC,IAAjD;AAAsD,MAAA,QAAQ,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAHJ,EAOI;AAAU,MAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,IAAI,EAAC,MAArC;AAA4C,MAAA,IAAI,EAAC,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAPJ,EAWI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,CAXZ,CADJ,CAFJ,CADJ;AAkCH;;AApFoC;;AAsFrC,eAAeF,YAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport JobDataService from '../service/JobDataService';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nclass JobComponent extends Component {\r\n  constructor(props) {\r\n      super(props)\r\n\r\n      this.state = {\r\n        id: this.props.match.params.id,\r\n          description: ''\r\n      }\r\n    //   this.onSubmit = this.onSubmit.bind(this)\r\n    //   this.validate = this.validate.bind(this)\r\n  }\r\n  componentDidMount() {\r\n      console.log(this.state.id)\r\n      if (this.state.employer == -1) {\r\n          return\r\n      }\r\n      JobDataService.retrieveJob(this.state.employer, this.state.id)\r\n      .then(response => this.setState({\r\n          description: response.data.description\r\n          }))\r\n  }\r\n\r\n//   validate(values) {\r\n//     let errors = {}\r\n//     if (!values.description) {\r\n//         errors.description = 'Enter a Description'\r\n//     } else if (values.description.length < 5) {\r\n//         errors.description = 'Enter atleast 5 Characters in Description'\r\n//     }\r\n//     return errors\r\n//   }\r\n\r\n//   onSubmit(values) {\r\n//     let username = INSTRUCTOR\r\n//     let course = {\r\n//         id: this.state.id,\r\n//         description: values.description\r\n//     }\r\n//     if (this.state.id === -1) {\r\n//         CourseDataService.createCourse(username, course)\r\n//             .then(() => this.props.history.push('/courses'))\r\n//     } else {\r\n//         CourseDataService.updateCourse(username, this.state.id, course)\r\n//             .then(() => this.props.history.push('/courses'))\r\n//     }\r\n//     console.log(values);\r\n//   }\r\n\r\n  render() {\r\n    let { description, id } = this.state\r\n    return (\r\n        <div>\r\n            <h3>Job</h3>\r\n            <div className=\"container\">\r\n                <Formik\r\n                    initialValues={{}}\r\n                    onSubmit={this.onSubmit}\r\n                    validateOnChange={false}\r\n                    validateOnBlur={false}\r\n                    validate={this.validate}\r\n                    enableReinitialize={true}\r\n                    \r\n                >\r\n                    {\r\n                        (props) => (\r\n                            <Form>\r\n                                <ErrorMessage name=\"description\" component=\"div\"\r\n                                    className=\"alert alert-warning\" />\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>Id</label>\r\n                                    <Field className=\"form-control\" type=\"text\" name=\"id\" disabled />\r\n                                </fieldset>\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>Description</label>\r\n                                    <Field className=\"form-control\" type=\"text\" name=\"description\" />\r\n                                </fieldset>\r\n                                <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n}\r\nexport default JobComponent"]},"metadata":{},"sourceType":"module"}